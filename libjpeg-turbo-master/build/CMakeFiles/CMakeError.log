Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
Checking whether the ASM_NASM compiler is MSVC using "/?" did not match "Microsoft":
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
Checking whether the ASM_NASM compiler is NASM using "-v" did not match "(NASM version)":
Checking whether the ASM_NASM compiler is YASM using "--version" did not match "(yasm)":
Checking whether the ASM_NASM compiler is ADSP using "-version" did not match "Analog Devices":
Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
Checking whether the ASM_NASM compiler is MSVC using "/?" did not match "Microsoft":
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
Checking whether the ASM_NASM compiler is NASM using "-v" did not match "(NASM version)":
Checking whether the ASM_NASM compiler is YASM using "--version" did not match "(yasm)":
Checking whether the ASM_NASM compiler is ADSP using "-version" did not match "Analog Devices":
Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
nasm: error: unrecognised option `--version'
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
nasm: error: unrecognised option `-V'
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
nasm: error: unrecognised option `--version'
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
nasm: error: unrecognised option `-V'
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
nasm: error: unrecognised option `-q'
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is MSVC using "/?" did not match "Microsoft":
nasm: warning: file name already has no extension: output will be in `nasm.out'
nasm: fatal: unable to open input file `/?'
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
usage: nasm [-@ response file] [-o outfile] [-f format] [-l listfile]
            [options...] [--] filename
    or nasm -v   for version info

    -t          assemble in SciTech TASM compatible mode
    -g          generate debug information in selected format.
    -E (or -e)  preprocess only (writes output to stdout by default)
    -a          don't preprocess (assemble only)
    -M          generate Makefile dependencies on stdout
    -MG         d:o, missing files assumed generated

    -Z<file>    redirect error messages to file
    -s          redirect error messages to stdout

    -F format   select a debugging format

    -I<path>    adds a pathname to the include file path
    -O<digit>   optimize branch offsets (-O0 disables, default)
    -P<file>    pre-includes a file
    -D<macro>[=<value>] pre-defines a macro
    -U<macro>   undefines a macro
    -X<format>  specifies error reporting format (gnu or vc)
    -w+foo      enables warning foo (equiv. -Wfoo)
    -w-foo      disable warning foo (equiv. -Wno-foo)
Warnings:
    error                   treat warnings as errors (default off)
    macro-params            macro calls with wrong parameter count (default on)
    macro-selfref           cyclic macro references (default off)
    macro-defaults          macros with more default than optional parameters (default on)
    orphan-labels           labels alone on lines without trailing `:' (default on)
    number-overflow         numeric constant does not fit (default on)
    gnu-elf-extensions      using 8- or 16-bit relocation in ELF32, a GNU extension (default off)
    float-overflow          floating point overflow (default on)
    float-denorm            floating point denormal (default off)
    float-underflow         floating point underflow (default off)
    float-toolong           too many digits in floating-point number (default on)
    user                    %warning directives (default on)

response files should contain command line parameters, one per line.

For a list of valid output formats, use -hf.
For a list of debug formats, use -f <form> -y.
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
nasm: error: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
NASM version 2.14rc15 compiled on Jul  6 2018
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
nasm:error: unrecognised option `-V'
type `nasm -h' for help
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
NASM version 2.14rc15 compiled on Jul  6 2018
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
nasm:error: unrecognised option `-V'
type `nasm -h' for help
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
nasm:error: unrecognised option `-q'
type `nasm -h' for help
Checking whether the ASM_NASM compiler is MSVC using "/?" did not match "Microsoft":
nasm:fatal: unable to open output file `/?'
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
usage: nasm [-@ response file] [-o outfile] [-f format] [-l listfile]
            [options...] [--] filename
    or nasm -v (or --v) for version info


Response files should contain command line parameters,
one per line.

    -t            assemble in SciTech TASM compatible mode
    -E (or -e)    preprocess only (writes output to stdout by default)
    -a            don't preprocess (assemble only)
    -M            generate Makefile dependencies on stdout
    -MG           d:o, missing files assumed generated
    -MF file      set Makefile dependency file
    -MD file      assemble and generate dependencies
    -MT file      dependency target name
    -MQ file      dependency target name (quoted)
    -MP           emit phony target

    -Zfile        redirect error messages to file
    -s            redirect error messages to stdout

    -g            generate debugging information

    -F format     select a debugging format

    -gformat      same as -g -F format

    -o outfile    write output to an outfile

    -f format     select an output format

    -l listfile   write listing to a listfile

    -Ipath        add a pathname to the include file path
    -Olevel       optimize opcodes, immediates and branch offsets
       -O0        no optimization
       -O1        minimal optimization
       -Ox        multipass optimization (default)
    -Pfile        pre-include a file (also --include)
    -Dmacro[=str] pre-define a macro
    -Umacro       undefine a macro
    -Xformat      specifiy error reporting format (gnu or vc)
    -w+foo        enable warning foo (equiv. -Wfoo)
    -w-foo        disable warning foo (equiv. -Wno-foo)
    -w[+-]error[=foo]
                  promote [specific] warnings to errors
    -h            show invocation summary and exit (also --help)

   --pragma str   pre-executes a specific %pragma
   --before str   add line (usually a preprocessor statement) before the input
   --prefix str   prepend the given string to all the given string
                  to all extern, common and global symbols (also --gprefix)
   --postfix str  append the given string to all the given string
                  to all extern, common and global symbols (also --gpostfix)
   --lprefix str  prepend the given string to all other symbols
   --lpostfix str append the given string to all other symbols
   --keep-all     output files will not be removed even if an error happens
   --limit-X val  set execution limit X
                     passes          total number of passes (default unlimited)
                     stalled-passes  number of passes without forward progress (default 1000)
                     macro-levels    levels of macro expansion (default 1000000)
                     rep             %rep count (default 1000000)
                     eval            expression evaluation descent (default 1000000)
                     lines           total source lines processed (default 2000000000)

Warnings for the -W/-w options:
    other                   any warning not specifially mentioned below (default on)
    macro-params            macro calls with wrong parameter count (default on)
    macro-selfref           cyclic macro references (default off)
    macro-defaults          macros with more default than optional parameters (default on)
    orphan-labels           labels alone on lines without trailing `:' (default on)
    number-overflow         numeric constant does not fit (default on)
    gnu-elf-extensions      using 8- or 16-bit relocation in ELF32, a GNU extension (default off)
    float-overflow          floating point overflow (default on)
    float-denorm            floating point denormal (default off)
    float-underflow         floating point underflow (default off)
    float-toolong           too many digits in floating-point number (default on)
    user                    %warning directives (default on)
    lock                    lock prefix on unlockable instructions (default on)
    hle                     invalid hle prefixes (default on)
    bnd                     invalid bnd prefixes (default on)
    zext-reloc              relocation zero-extended to match output format (default on)
    ptr                     non-NASM keyword used in other assemblers (default on)
    bad-pragma              empty or malformed %pragma (default off)
    unknown-pragma          unknown %pragma facility or directive (default off)
    not-my-pragma           %pragma not applicable to this compilation (default off)
    unknown-warning         unknown warning in -W/-w or warning directive (default off)
    negative-rep            regative %rep count (default on)
    phase                   phase error during stabilization (default off)
    all                     all possible warnings

For a list of valid output formats, use -hf.
For a list of debug formats, use -f <format> -y.
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
nasm:fatal: no input file specified
type `nasm -h' for help
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
nasm:fatal: no input file specified
type `nasm -h' for help
